// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "nivel4":
            case "nivel4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "nivel10":
            case "nivel9":return tiles.createTilemap(hex`f100101100a03020202020202020202020202030101010101010302030302030e010101010d03020202020202020202020202030101010101010302030302030e010101010d03020202020202020202020202030101010101010302030302030e010101010d0302020202020202020202020203010101010101030203030203090c0c0c0c0b0302020202020202020202020203010101010101030203030203030303030303030202020202020202020202020303030303030303020303020202020202020202020202020202020202020202020202020202020202030303030303030303030303030303030303030303030303030303030303030303`, img`
22222222222222222222222222222222
2..............................2
2.22222222............22222222.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.222..222............222..222.2
2...2..2................2..2...2
2...2..2......22222.....2..2...2
2...2..2......2...2.....2..2...2
2...2..2......2...2.....2..2...2
2...2..2......2...2.....2..2...2
2...2..222222222.22222222..2...2
2...2......................2...2
2...2......................2...2
2...2..22222222...2222222..2...2
2...2..2......22222.....2..2...2
2...2..2................2..2...2
2...2..2................2..2...2
2...2..2................2..2...2
2...2..2................2..2...2
2.222..222............222..222.2
2.222..222............2......2.2
2.22....22............2......2.2
2.22....22............2......2.2
2.22....22............2......2.2
2.22222222............2......2.2
2.22222222............22222222.2
2..............................2
22222222222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.castle.tileGrass1,sprites.builtin.forestTiles0,sprites.castle.tilePath8,sprites.castle.tilePath2,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.dungeon.chestClosed,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.castle.tilePath7,sprites.castle.tilePath9], TileScale.Sixteen);
            case "nivel0":
            case "nivel3":return tiles.createTilemap(hex``, img`
................
................
................
................
......2.........
................
22..............
................
..........22....
................
...222..........
................
................
2...............
22..........222.
................
................
................
.22222222.......
........22......
................
................
............2222
................
................
.....2222.......
................
............2...
................
................
2222..222.......
................
................
............2222
................
................
........2.......
.......22.......
......222.......
................
................
2222............
...22...........
................
................
................
.....222222.....
................
22..............
................
................
................
....222.........
................
................
..........222...
............22..
................
................
................
..............22
22..............
................
......22222.....
................
..............22
................
................
................
.........222....
................
................
...2222.........
................
................
..........2222..
................
................
................
2222222222222222
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "nivel1":
            case "nivel1":return tiles.createTilemap(hex`200020000303030303030303030303030303030303030303030303030303030303030303030202020202020202020202020202020202020202020202020202020202020303020303030303030303020202020202020202020202030303030303030302030302031516161616170302020202020202020202020203201f1f1f1f210302030302031a141414141b03020202020202020202020202031d1e1e1e1e220302030302031a141414141b03020202020202020202020202031d1e1e1e1e220302030302031a141414141b03020202020202020202020202031d1e1e1e1e22030203030203191c1c1c1cf010602020202020202020202020202020202020207060202020203030202020207060202020202020202020202020202020202020706020202020303020303030706030303020202020202020202020202030303010103030302030302030f101313100a03020202020202020202020202032b2c262626270302030302030e131313130d03020202020202020202020202032d26262626280302030302030e131313130d03020202020202020202020202032d26262626280302030302030e131313130d03020202020202020202020202032d2626262628030203030203090c0c0c0c0b03020202020202020202020202032a2e2e2e2e29030203030203030303030303030202020202020202020202020303030303030303020303020202020202020202020202020202020202020202020202020202020202030303030303030303030303030303030303030303030303030303030303030303`, img`
22222222222222222222222222222222
2..............................2
2.22222222............22222222.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2.2222.2............2.2222.2.2
2.222..222............222..222.2
2...2..2................2..2...2
2...2..2......22222.....2......2
2...2..2......2...2.....2......2
2...2..2......2...2.....2..2...2
2...2..2......2...2.....2..2...2
2...2..222222222.22222222..2...2
2...2......................2...2
2...2......................2...2
2...2..22222222...2222222..2...2
2...2..2......22222.....2..2...2
2..22..2................2..2...2
2..2...2................2..2...2
2..2...2................2..2...2
2..22..2................2..2...2
2.222..222............222..222.2
2.2......2............2.2222.2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.2......2............2......2.2
2.22222222............22222222.2
2..............................2
22222222222222222222222222222222
`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.castle.tileGrass1,sprites.builtin.forestTiles0,sprites.castle.tilePath8,sprites.castle.tilePath2,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.dungeon.chestClosed,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterEast1,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.castle.tilePath7,sprites.castle.tilePath9,sprites.dungeon.darkGroundCenter,sprites.dungeon.hazardLava1,sprites.vehicle.roadTurn1,sprites.vehicle.roadIntersection3,sprites.vehicle.roadTurn2,sprites.vehicle.roadTurn4,sprites.vehicle.roadTurn3,sprites.vehicle.roadIntersection2,sprites.vehicle.roadIntersection4,sprites.vehicle.roadIntersection1,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile13,sprites.builtin.forestTiles10,sprites.builtin.forestTiles7,sprites.builtin.forestTiles11,sprites.builtin.forestTiles15,sprites.builtin.forestTiles13,sprites.builtin.forestTiles5,sprites.builtin.forestTiles6,sprites.builtin.forestTiles9,sprites.builtin.forestTiles14,myTiles.tile15,myTiles.tile16], TileScale.Sixteen);
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "tile2":return tile2;
            case "myTile0":
            case "tile5":return tile5;
            case "myTile1":
            case "tile6":return tile6;
            case "myTile2":
            case "tile7":return tile7;
            case "myTile3":
            case "tile8":return tile8;
            case "myTile4":
            case "tile9":return tile9;
            case "myTile5":
            case "tile10":return tile10;
            case "myTile6":
            case "tile11":return tile11;
            case "myTile7":
            case "tile12":return tile12;
            case "myTile8":
            case "tile13":return tile13;
            case "tile14":return tile14;
            case "myTile9":
            case "tile17":return tile17;
            case "myTile10":
            case "tile18":return tile18;
            case "caballero":
            case "tile15":return tile15;
            case "cangrejo":
            case "tile16":return tile16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
